SET SERVEROUTPUT ON
/*
 * Script de regularización para la eliminación de data técnica asociada a servicios de Internet MD en estado Rechazada para evitar
 * liberación de puertos al ejecutar la anulación del servicio 
 */
DECLARE
  CURSOR Lc_ServsReguSt
  IS
    SELECT DISTINCT SERVICIO_INTERNET.ID_SERVICIO AS ID_SERVICIO_INTERNET,
      SERVICIO_INTERNET.ESTADO AS ESTADO_SERVICIO_INTERNET,
      SERVICIO_TECNICO_INTERNET.ID_SERVICIO_TECNICO
    FROM DB_COMERCIAL.INFO_SERVICIO SERVICIO_INTERNET
    INNER JOIN DB_COMERCIAL.INFO_PUNTO PUNTO
    ON PUNTO.ID_PUNTO = SERVICIO_INTERNET.PUNTO_ID
    INNER JOIN DB_COMERCIAL.INFO_PLAN_CAB PLAN
    ON PLAN.ID_PLAN = SERVICIO_INTERNET.PLAN_ID
    INNER JOIN DB_COMERCIAL.INFO_PLAN_DET PLAN_DET
    ON PLAN_DET.PLAN_ID = PLAN.ID_PLAN
    INNER JOIN DB_COMERCIAL.ADMI_PRODUCTO PROD_INTERNET_EN_PLAN
    ON PROD_INTERNET_EN_PLAN.ID_PRODUCTO = PLAN_DET.PRODUCTO_ID
    INNER JOIN DB_COMERCIAL.INFO_SERVICIO_TECNICO SERVICIO_TECNICO_INTERNET
    ON SERVICIO_TECNICO_INTERNET.SERVICIO_ID = SERVICIO_INTERNET.ID_SERVICIO
    INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO OLT
    ON OLT.ID_ELEMENTO = SERVICIO_TECNICO_INTERNET.ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_MODELO_ELEMENTO MODELO_OLT
    ON MODELO_OLT.ID_MODELO_ELEMENTO = OLT.MODELO_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_TIPO_ELEMENTO TIPO_OLT
    ON TIPO_OLT.ID_TIPO_ELEMENTO = MODELO_OLT.TIPO_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_MARCA_ELEMENTO MARCA_OLT
    ON MARCA_OLT.ID_MARCA_ELEMENTO = MODELO_OLT.MARCA_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.INFO_INTERFACE_ELEMENTO INTERFACE_SPLITTER
    ON INTERFACE_SPLITTER.ID_INTERFACE_ELEMENTO = SERVICIO_TECNICO_INTERNET.INTERFACE_ELEMENTO_CONECTOR_ID
    WHERE PROD_INTERNET_EN_PLAN.NOMBRE_TECNICO  = 'INTERNET'
    AND PLAN_DET.ESTADO                         = PLAN.ESTADO
    AND PROD_INTERNET_EN_PLAN.EMPRESA_COD       = '18'
    AND TIPO_OLT.NOMBRE_TIPO_ELEMENTO           = 'OLT'
    AND SERVICIO_INTERNET.ESTADO                = 'Rechazada';
TYPE Lt_FetchArray
IS
  TABLE OF Lc_ServsReguSt%ROWTYPE;
  Lt_ServsReguSt Lt_FetchArray;
  Le_BulkErrors             EXCEPTION;
  PRAGMA                    EXCEPTION_INIT(Le_BulkErrors, -24381);
  Lv_Mensaje                VARCHAR2(4000);
BEGIN
  IF Lc_ServsReguSt%ISOPEN THEN
    CLOSE Lc_ServsReguSt;
  END IF;
  OPEN Lc_ServsReguSt;
  LOOP
    FETCH Lc_ServsReguSt BULK COLLECT
    INTO Lt_ServsReguSt LIMIT 1000;
    FORALL Ln_Index IN 1..Lt_ServsReguSt.COUNT SAVE EXCEPTIONS
    UPDATE DB_COMERCIAL.INFO_SERVICIO_TECNICO 
    SET ELEMENTO_ID = NULL,
    INTERFACE_ELEMENTO_ID = NULL,
    ELEMENTO_CONTENEDOR_ID = NULL,
    ELEMENTO_CONECTOR_ID = NULL,
    INTERFACE_ELEMENTO_CONECTOR_ID = NULL
    WHERE ID_SERVICIO_TECNICO = Lt_ServsReguSt(Ln_Index).ID_SERVICIO_TECNICO;
    FORALL Ln_Index IN 1..Lt_ServsReguSt.COUNT SAVE EXCEPTIONS
    INSERT
    INTO DB_COMERCIAL.INFO_SERVICIO_HISTORIAL
      (
        ID_SERVICIO_HISTORIAL,
        SERVICIO_ID,
        ESTADO,
        OBSERVACION,
        USR_CREACION,
        FE_CREACION,
        IP_CREACION
      )
      VALUES
      (
        DB_COMERCIAL.SEQ_INFO_SERVICIO_HISTORIAL.NEXTVAL,
        Lt_ServsReguSt(Ln_Index).ID_SERVICIO_INTERNET,
        Lt_ServsReguSt(Ln_Index).ESTADO_SERVICIO_INTERNET,
        'Se elimina la información técnica por regularización de servicios rechazados',
        'reguServicioSt',
        SYSDATE,
        '127.0.0.1'
      );
    EXIT
  WHEN Lc_ServsReguSt%NOTFOUND;
  END LOOP;
  CLOSE Lc_ServsReguSt;
  COMMIT;
  SYS.DBMS_OUTPUT.PUT_LINE('Se ha eliminado la información técnica de los servicios MD en estado Rechazada');
EXCEPTION
WHEN Le_BulkErrors THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK || ' - ERROR_BACKTRACE: ' 
                            || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  ROLLBACK;
WHEN OTHERS THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK || ' - ERROR_BACKTRACE: ' 
                            || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  ROLLBACK;
END;
/

/*
 * Script de regularización para la eliminación de data técnica asociada a servicios de Internet Small Business y Telcohome en estado Rechazada 
 * para evitar liberación de puertos al ejecutar la anulación del servicio 
 */
DECLARE
  CURSOR Lc_ServsReguSt
  IS
    SELECT DISTINCT SERVICIO_INTERNET.ID_SERVICIO AS ID_SERVICIO_INTERNET,
      SERVICIO_INTERNET.ESTADO AS ESTADO_SERVICIO_INTERNET,
      SERVICIO_TECNICO_INTERNET.ID_SERVICIO_TECNICO
    FROM DB_COMERCIAL.INFO_SERVICIO SERVICIO_INTERNET
    INNER JOIN DB_COMERCIAL.INFO_PUNTO PUNTO
    ON PUNTO.ID_PUNTO = SERVICIO_INTERNET.PUNTO_ID
    INNER JOIN DB_COMERCIAL.ADMI_PRODUCTO PROD_INTERNET
    ON PROD_INTERNET.ID_PRODUCTO = SERVICIO_INTERNET.PRODUCTO_ID
    INNER JOIN DB_COMERCIAL.INFO_SERVICIO_TECNICO SERVICIO_TECNICO_INTERNET
    ON SERVICIO_TECNICO_INTERNET.SERVICIO_ID = SERVICIO_INTERNET.ID_SERVICIO
    INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO OLT
    ON OLT.ID_ELEMENTO = SERVICIO_TECNICO_INTERNET.ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_MODELO_ELEMENTO MODELO_OLT
    ON MODELO_OLT.ID_MODELO_ELEMENTO = OLT.MODELO_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_TIPO_ELEMENTO TIPO_OLT
    ON TIPO_OLT.ID_TIPO_ELEMENTO = MODELO_OLT.TIPO_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_MARCA_ELEMENTO MARCA_OLT
    ON MARCA_OLT.ID_MARCA_ELEMENTO = MODELO_OLT.MARCA_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.INFO_INTERFACE_ELEMENTO INTERFACE_SPLITTER
    ON INTERFACE_SPLITTER.ID_INTERFACE_ELEMENTO = SERVICIO_TECNICO_INTERNET.INTERFACE_ELEMENTO_CONECTOR_ID
    WHERE PROD_INTERNET.NOMBRE_TECNICO  IN ('INTERNET SMALL BUSINESS', 'TELCOHOME')
    AND PROD_INTERNET.EMPRESA_COD               = '10'
    AND TIPO_OLT.NOMBRE_TIPO_ELEMENTO           = 'OLT'
    AND SERVICIO_INTERNET.ESTADO                = 'Rechazada';
TYPE Lt_FetchArray
IS
  TABLE OF Lc_ServsReguSt%ROWTYPE;
  Lt_ServsReguSt Lt_FetchArray;
  Le_BulkErrors             EXCEPTION;
  PRAGMA                    EXCEPTION_INIT(Le_BulkErrors, -24381);
  Lv_Mensaje                VARCHAR2(4000);
BEGIN
  IF Lc_ServsReguSt%ISOPEN THEN
    CLOSE Lc_ServsReguSt;
  END IF;
  OPEN Lc_ServsReguSt;
  LOOP
    FETCH Lc_ServsReguSt BULK COLLECT
    INTO Lt_ServsReguSt LIMIT 1000;
    FORALL Ln_Index IN 1..Lt_ServsReguSt.COUNT SAVE EXCEPTIONS
    UPDATE DB_COMERCIAL.INFO_SERVICIO_TECNICO 
    SET ELEMENTO_ID = NULL,
    INTERFACE_ELEMENTO_ID = NULL,
    ELEMENTO_CONTENEDOR_ID = NULL,
    ELEMENTO_CONECTOR_ID = NULL,
    INTERFACE_ELEMENTO_CONECTOR_ID = NULL
    WHERE ID_SERVICIO_TECNICO = Lt_ServsReguSt(Ln_Index).ID_SERVICIO_TECNICO;
    FORALL Ln_Index IN 1..Lt_ServsReguSt.COUNT SAVE EXCEPTIONS
    INSERT
    INTO DB_COMERCIAL.INFO_SERVICIO_HISTORIAL
      (
        ID_SERVICIO_HISTORIAL,
        SERVICIO_ID,
        ESTADO,
        OBSERVACION,
        USR_CREACION,
        FE_CREACION,
        IP_CREACION
      )
      VALUES
      (
        DB_COMERCIAL.SEQ_INFO_SERVICIO_HISTORIAL.NEXTVAL,
        Lt_ServsReguSt(Ln_Index).ID_SERVICIO_INTERNET,
        Lt_ServsReguSt(Ln_Index).ESTADO_SERVICIO_INTERNET,
        'Se elimina la información técnica por regularización de servicios rechazados',
        'reguServicioSt',
        SYSDATE,
        '127.0.0.1'
      );
    EXIT
  WHEN Lc_ServsReguSt%NOTFOUND;
  END LOOP;
  CLOSE Lc_ServsReguSt;
  COMMIT;
  SYS.DBMS_OUTPUT.PUT_LINE('Se ha eliminado la información técnica de los servicios TN en estado Rechazada');
EXCEPTION
WHEN Le_BulkErrors THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK || ' - ERROR_BACKTRACE: ' 
                            || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  ROLLBACK;
WHEN OTHERS THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK || ' - ERROR_BACKTRACE: ' 
                            || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  ROLLBACK;
END;
/

/*
 * Script de regularización para la eliminación de data técnica asociada a servicios Dual Band por actualización en cambio de puerto lógico
 */
DECLARE
  CURSOR Lc_ServsReguSt
  IS
    SELECT DISTINCT SERVICIO_DUAL_BAND.ID_SERVICIO AS ID_SERVICIO_DUAL_BAND,
      SERVICIO_DUAL_BAND.ESTADO AS ESTADO_SERVICIO_DUAL_BAND,
      SERVICIO_TECNICO_DUAL_BAND.ID_SERVICIO_TECNICO
    FROM DB_COMERCIAL.INFO_SERVICIO SERVICIO_DUAL_BAND
    INNER JOIN DB_COMERCIAL.INFO_PUNTO PUNTO
    ON PUNTO.ID_PUNTO = SERVICIO_DUAL_BAND.PUNTO_ID
    INNER JOIN DB_COMERCIAL.ADMI_PRODUCTO PROD_DUAL_BAND
    ON PROD_DUAL_BAND.ID_PRODUCTO = SERVICIO_DUAL_BAND.PRODUCTO_ID
    INNER JOIN DB_COMERCIAL.INFO_SERVICIO_TECNICO SERVICIO_TECNICO_DUAL_BAND
    ON SERVICIO_TECNICO_DUAL_BAND.SERVICIO_ID = SERVICIO_DUAL_BAND.ID_SERVICIO
    INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO ONT
    ON ONT.ID_ELEMENTO = SERVICIO_TECNICO_DUAL_BAND.ELEMENTO_CLIENTE_ID
    WHERE PROD_DUAL_BAND.NOMBRE_TECNICO  IN ('WIFI_DUAL_BAND', 'EXTENDER_DUAL_BAND', 'WDB_Y_EDB')
    AND PROD_DUAL_BAND.EMPRESA_COD               = '18'
    AND SERVICIO_DUAL_BAND.ESTADO                = 'Activo'
    AND SERVICIO_TECNICO_DUAL_BAND.INTERFACE_ELEMENTO_CONECTOR_ID IS NOT NULL;
TYPE Lt_FetchArray
IS
  TABLE OF Lc_ServsReguSt%ROWTYPE;
  Lt_ServsReguSt Lt_FetchArray;
  Le_BulkErrors             EXCEPTION;
  PRAGMA                    EXCEPTION_INIT(Le_BulkErrors, -24381);
  Lv_Mensaje                VARCHAR2(4000);
BEGIN
  IF Lc_ServsReguSt%ISOPEN THEN
    CLOSE Lc_ServsReguSt;
  END IF;
  OPEN Lc_ServsReguSt;
  LOOP
    FETCH Lc_ServsReguSt BULK COLLECT
    INTO Lt_ServsReguSt LIMIT 1000;
    FORALL Ln_Index IN 1..Lt_ServsReguSt.COUNT SAVE EXCEPTIONS
    UPDATE DB_COMERCIAL.INFO_SERVICIO_TECNICO 
    SET ELEMENTO_ID = NULL,
    INTERFACE_ELEMENTO_ID = NULL,
    ELEMENTO_CONTENEDOR_ID = NULL,
    ELEMENTO_CONECTOR_ID = NULL,
    INTERFACE_ELEMENTO_CONECTOR_ID = NULL
    WHERE ID_SERVICIO_TECNICO = Lt_ServsReguSt(Ln_Index).ID_SERVICIO_TECNICO;
    FORALL Ln_Index IN 1..Lt_ServsReguSt.COUNT SAVE EXCEPTIONS
    INSERT
    INTO DB_COMERCIAL.INFO_SERVICIO_HISTORIAL
      (
        ID_SERVICIO_HISTORIAL,
        SERVICIO_ID,
        ESTADO,
        OBSERVACION,
        USR_CREACION,
        FE_CREACION,
        IP_CREACION
      )
      VALUES
      (
        DB_COMERCIAL.SEQ_INFO_SERVICIO_HISTORIAL.NEXTVAL,
        Lt_ServsReguSt(Ln_Index).ID_SERVICIO_DUAL_BAND,
        Lt_ServsReguSt(Ln_Index).ESTADO_SERVICIO_DUAL_BAND,
        'Se elimina la información técnica por regularización de servicios dual band',
        'reguServicioSt',
        SYSDATE,
        '127.0.0.1'
      );
    EXIT
  WHEN Lc_ServsReguSt%NOTFOUND;
  END LOOP;
  CLOSE Lc_ServsReguSt;
  COMMIT;
  SYS.DBMS_OUTPUT.PUT_LINE('Se ha eliminado la información técnica de los servicios Dual Band');
EXCEPTION
WHEN Le_BulkErrors THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK || ' - ERROR_BACKTRACE: ' 
                            || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  ROLLBACK;
WHEN OTHERS THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK || ' - ERROR_BACKTRACE: ' 
                            || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  ROLLBACK;
END;
/

/*
 * Script de regularización para actualizar interfaces de servicios Activos a connected y que no cuenten con una solicitud de migración
 */
DECLARE
  CURSOR Lc_InterfacesReguSt
  IS
    WITH ST_COMPARTIDA_SERVS_ACTIVOS AS
      ( SELECT DISTINCT OLT.ID_ELEMENTO              AS ID_OLT,
        OLT.NOMBRE_ELEMENTO                          AS NOMBRE_OLT,
        MARCA_OLT.NOMBRE_MARCA_ELEMENTO              AS NOMBRE_MARCA_OLT,
        MODELO_OLT.NOMBRE_MODELO_ELEMENTO            AS NOMBRE_MODELO_OLT,
        ELEMENTO_CONECTOR.ID_ELEMENTO                AS ID_ELEMENTO_CONECTOR,
        ELEMENTO_CONECTOR.NOMBRE_ELEMENTO            AS NOMBRE_ELEMENTO_CONECTOR,
        INTERFACE_CONECTOR.ID_INTERFACE_ELEMENTO     AS ID_INTERFACE_CONECTOR,
        INTERFACE_CONECTOR.NOMBRE_INTERFACE_ELEMENTO AS NOMBRE_INTERFACE_CONECTOR,
        INTERFACE_CONECTOR.ESTADO                    AS ESTADO_INTERFACE_CONECTOR
      FROM DB_COMERCIAL.INFO_SERVICIO SERVICIO_INTERNET
      INNER JOIN DB_COMERCIAL.INFO_PUNTO PUNTO
      ON PUNTO.ID_PUNTO = SERVICIO_INTERNET.PUNTO_ID
      INNER JOIN DB_COMERCIAL.INFO_SERVICIO_TECNICO SERVICIO_TECNICO_INTERNET
      ON SERVICIO_TECNICO_INTERNET.SERVICIO_ID = SERVICIO_INTERNET.ID_SERVICIO
      INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO OLT
      ON OLT.ID_ELEMENTO = SERVICIO_TECNICO_INTERNET.ELEMENTO_ID
      INNER JOIN DB_INFRAESTRUCTURA.ADMI_MODELO_ELEMENTO MODELO_OLT
      ON MODELO_OLT.ID_MODELO_ELEMENTO = OLT.MODELO_ELEMENTO_ID
      INNER JOIN DB_INFRAESTRUCTURA.ADMI_TIPO_ELEMENTO TIPO_OLT
      ON TIPO_OLT.ID_TIPO_ELEMENTO = MODELO_OLT.TIPO_ELEMENTO_ID
      INNER JOIN DB_INFRAESTRUCTURA.ADMI_MARCA_ELEMENTO MARCA_OLT
      ON MARCA_OLT.ID_MARCA_ELEMENTO = MODELO_OLT.MARCA_ELEMENTO_ID
      INNER JOIN DB_INFRAESTRUCTURA.INFO_INTERFACE_ELEMENTO INTERFACE_CONECTOR
      ON INTERFACE_CONECTOR.ID_INTERFACE_ELEMENTO = SERVICIO_TECNICO_INTERNET.INTERFACE_ELEMENTO_CONECTOR_ID
      INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO ELEMENTO_CONECTOR
      ON ELEMENTO_CONECTOR.ID_ELEMENTO = INTERFACE_CONECTOR.ELEMENTO_ID
      INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO ONT
      ON ONT.ID_ELEMENTO = SERVICIO_TECNICO_INTERNET.ELEMENTO_CLIENTE_ID
      LEFT JOIN DB_COMERCIAL.INFO_PLAN_CAB PLAN
      ON PLAN.ID_PLAN = SERVICIO_INTERNET.PLAN_ID
      LEFT JOIN DB_COMERCIAL.INFO_PLAN_DET PLAN_DET
      ON PLAN_DET.PLAN_ID = PLAN.ID_PLAN
      LEFT JOIN DB_COMERCIAL.ADMI_PRODUCTO PROD_INTERNET_EN_PLAN
      ON PROD_INTERNET_EN_PLAN.ID_PRODUCTO = PLAN_DET.PRODUCTO_ID
      LEFT JOIN DB_COMERCIAL.ADMI_PRODUCTO PROD_TN
      ON PROD_TN.ID_PRODUCTO                   = SERVICIO_INTERNET.PRODUCTO_ID
      WHERE SERVICIO_INTERNET.ESTADO          IN ('Activo', 'EnVerificacion', 'EnPruebas', 'In-Corte')
      AND ( (SERVICIO_INTERNET.PLAN_ID        IS NOT NULL
      AND PROD_INTERNET_EN_PLAN.NOMBRE_TECNICO = 'INTERNET'
      AND PROD_INTERNET_EN_PLAN.EMPRESA_COD    = '18'
      AND PLAN_DET.ESTADO                     <> 'Eliminado')
      OR (SERVICIO_INTERNET.PRODUCTO_ID       IS NOT NULL
      AND PROD_TN.NOMBRE_TECNICO              IN ('INTERNET SMALL BUSINESS', 'TELCOHOME')
      AND PROD_TN.EMPRESA_COD                  = '10') )
      GROUP BY OLT.ID_ELEMENTO ,
        OLT.NOMBRE_ELEMENTO ,
        MARCA_OLT.NOMBRE_MARCA_ELEMENTO ,
        MODELO_OLT.NOMBRE_MODELO_ELEMENTO ,
        ELEMENTO_CONECTOR.ID_ELEMENTO ,
        ELEMENTO_CONECTOR.NOMBRE_ELEMENTO ,
        INTERFACE_CONECTOR.ID_INTERFACE_ELEMENTO ,
        INTERFACE_CONECTOR.NOMBRE_INTERFACE_ELEMENTO ,
        INTERFACE_CONECTOR.ESTADO
      HAVING COUNT(DISTINCT SERVICIO_INTERNET.ID_SERVICIO) > 1
      )
    SELECT DISTINCT SERVICIO_INTERNET.ID_SERVICIO AS ID_SERVICIO_INTERNET,
      SERVICIO_INTERNET.ESTADO AS ESTADO_SERVICIO_INTERNET,
      INTERFACE_CONECTOR.ID_INTERFACE_ELEMENTO AS ID_INTERFACE_CONECTOR,
      INTERFACE_CONECTOR.ESTADO AS ESTADO_INTERFACE_CONECTOR
    FROM DB_COMERCIAL.INFO_SERVICIO SERVICIO_INTERNET
    INNER JOIN DB_COMERCIAL.INFO_PUNTO PUNTO
    ON PUNTO.ID_PUNTO = SERVICIO_INTERNET.PUNTO_ID
    INNER JOIN DB_COMERCIAL.INFO_SERVICIO_TECNICO SERVICIO_TECNICO_INTERNET
    ON SERVICIO_TECNICO_INTERNET.SERVICIO_ID = SERVICIO_INTERNET.ID_SERVICIO
    INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO OLT
    ON OLT.ID_ELEMENTO = SERVICIO_TECNICO_INTERNET.ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_MODELO_ELEMENTO MODELO_OLT
    ON MODELO_OLT.ID_MODELO_ELEMENTO = OLT.MODELO_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_TIPO_ELEMENTO TIPO_OLT
    ON TIPO_OLT.ID_TIPO_ELEMENTO = MODELO_OLT.TIPO_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.ADMI_MARCA_ELEMENTO MARCA_OLT
    ON MARCA_OLT.ID_MARCA_ELEMENTO = MODELO_OLT.MARCA_ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.INFO_INTERFACE_ELEMENTO INTERFACE_CONECTOR
    ON INTERFACE_CONECTOR.ID_INTERFACE_ELEMENTO = SERVICIO_TECNICO_INTERNET.INTERFACE_ELEMENTO_CONECTOR_ID
    INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO ELEMENTO_CONECTOR
    ON ELEMENTO_CONECTOR.ID_ELEMENTO = INTERFACE_CONECTOR.ELEMENTO_ID
    INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO ONT
    ON ONT.ID_ELEMENTO = SERVICIO_TECNICO_INTERNET.ELEMENTO_CLIENTE_ID
    LEFT JOIN DB_COMERCIAL.INFO_PLAN_CAB PLAN
    ON PLAN.ID_PLAN = SERVICIO_INTERNET.PLAN_ID
    LEFT JOIN DB_COMERCIAL.INFO_PLAN_DET PLAN_DET
    ON PLAN_DET.PLAN_ID = PLAN.ID_PLAN
    LEFT JOIN DB_COMERCIAL.ADMI_PRODUCTO PROD_INTERNET_EN_PLAN
    ON PROD_INTERNET_EN_PLAN.ID_PRODUCTO = PLAN_DET.PRODUCTO_ID
    LEFT JOIN DB_COMERCIAL.ADMI_PRODUCTO PROD_TN
    ON PROD_TN.ID_PRODUCTO                   = SERVICIO_INTERNET.PRODUCTO_ID
    WHERE SERVICIO_INTERNET.ESTADO          IN ('Activo', 'EnVerificacion', 'EnPruebas', 'In-Corte')
    AND ( (SERVICIO_INTERNET.PLAN_ID        IS NOT NULL
    AND PROD_INTERNET_EN_PLAN.NOMBRE_TECNICO = 'INTERNET'
    AND PROD_INTERNET_EN_PLAN.EMPRESA_COD    = '18'
    AND PLAN_DET.ESTADO                     <> 'Eliminado')
    OR (SERVICIO_INTERNET.PRODUCTO_ID       IS NOT NULL
    AND PROD_TN.NOMBRE_TECNICO              IN ('INTERNET SMALL BUSINESS', 'TELCOHOME')
    AND PROD_TN.EMPRESA_COD                  = '10') )
    AND INTERFACE_CONECTOR.ESTADO           IN ('not connect', 'reserved', 'Factible')
    AND ELEMENTO_CONECTOR.ESTADO            <> 'Eliminado'
    AND NOT EXISTS
      (SELECT SOL_MIGRACION.ID_DETALLE_SOLICITUD
      FROM DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOL_MIGRACION
      INNER JOIN DB_COMERCIAL.ADMI_TIPO_SOLICITUD TIPO_SOL
      ON TIPO_SOL.ID_TIPO_SOLICITUD      = SOL_MIGRACION.TIPO_SOLICITUD_ID
      WHERE SOL_MIGRACION.SERVICIO_ID    = SERVICIO_INTERNET.ID_SERVICIO
      AND SOL_MIGRACION.ESTADO          IN ('Pendiente', 'PrePlanificada', 'Replanificada', 'Asignada', 'AsignadoTarea', 'In-Corte')
      AND TIPO_SOL.DESCRIPCION_SOLICITUD ='SOLICITUD MIGRACION'
      )
    AND NOT EXISTS
      (SELECT ST_COMPARTIDA.*
      FROM ST_COMPARTIDA_SERVS_ACTIVOS ST_COMPARTIDA
      WHERE ST_COMPARTIDA.ID_OLT              = OLT.ID_ELEMENTO
      AND ST_COMPARTIDA.ID_ELEMENTO_CONECTOR  = ELEMENTO_CONECTOR.ID_ELEMENTO
      AND ST_COMPARTIDA.ID_INTERFACE_CONECTOR = INTERFACE_CONECTOR.ID_INTERFACE_ELEMENTO
      );
TYPE Lt_FetchArray
IS
  TABLE OF Lc_InterfacesReguSt%ROWTYPE;
  Lt_InterfacesReguSt Lt_FetchArray;
  Le_BulkErrors EXCEPTION;
  PRAGMA EXCEPTION_INIT(Le_BulkErrors, -24381);
  Lv_Mensaje VARCHAR2(4000);
BEGIN
  IF Lc_InterfacesReguSt%ISOPEN THEN
    CLOSE Lc_InterfacesReguSt;
  END IF;
  OPEN Lc_InterfacesReguSt;
  LOOP
    FETCH Lc_InterfacesReguSt BULK COLLECT INTO Lt_InterfacesReguSt LIMIT 1000;
    FORALL Ln_Index IN 1..Lt_InterfacesReguSt.COUNT SAVE EXCEPTIONS
    UPDATE DB_INFRAESTRUCTURA.INFO_INTERFACE_ELEMENTO
    SET ESTADO                  = 'connected',
      USR_ULT_MOD               = 'reguInterfaces',
      FE_ULT_MOD                = SYSDATE
    WHERE ID_INTERFACE_ELEMENTO = Lt_InterfacesReguSt(Ln_Index).ID_INTERFACE_CONECTOR;

    FORALL Ln_Index IN 1..Lt_InterfacesReguSt.COUNT SAVE EXCEPTIONS
    INSERT
    INTO DB_COMERCIAL.INFO_SERVICIO_HISTORIAL
      (
        ID_SERVICIO_HISTORIAL,
        SERVICIO_ID,
        ESTADO,
        OBSERVACION,
        USR_CREACION,
        FE_CREACION,
        IP_CREACION
      )
      VALUES
      (
        DB_COMERCIAL.SEQ_INFO_SERVICIO_HISTORIAL.NEXTVAL,
        Lt_InterfacesReguSt(Ln_Index).ID_SERVICIO_INTERNET,
        Lt_InterfacesReguSt(Ln_Index).ESTADO_SERVICIO_INTERNET,
        'Se actualiza el estado de la interface del elemento conector con ID ' || Lt_InterfacesReguSt(Ln_Index).ID_INTERFACE_CONECTOR || '<br>'
        || 'Estado Anterior: ' || Lt_InterfacesReguSt(Ln_Index).ESTADO_INTERFACE_CONECTOR || '<br>'
        || 'Estado Nuevo: connected',
        'reguInterfaces',
        SYSDATE,
        '127.0.0.1'
      );
    EXIT
  WHEN Lc_InterfacesReguSt%NOTFOUND;
  END LOOP;
  CLOSE Lc_InterfacesReguSt;
  COMMIT;
  SYS.DBMS_OUTPUT.PUT_LINE('Se han actualizado los estado de las interfaces de splitter a connected por servicios Activos');
EXCEPTION
WHEN Le_BulkErrors THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK || ' - ERROR_BACKTRACE: ' 
                            || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  ROLLBACK;
WHEN OTHERS THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK || ' - ERROR_BACKTRACE: ' 
                            || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  ROLLBACK;
END;
/
