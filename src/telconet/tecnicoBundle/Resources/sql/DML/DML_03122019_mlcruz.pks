SET SERVEROUTPUT ON
--Creación de parámetros con coordenadas por país
DECLARE
  Ln_IdValoresEquipo NUMBER(5,0);
BEGIN
  INSERT
  INTO DB_GENERAL.ADMI_PARAMETRO_CAB
    (
      ID_PARAMETRO,
      NOMBRE_PARAMETRO,
      DESCRIPCION,
      ESTADO,
      USR_CREACION,
      FE_CREACION,
      IP_CREACION
    )
    VALUES
    (
      DB_GENERAL.SEQ_ADMI_PARAMETRO_CAB.NEXTVAL,
      'VALORES_EQUIPOS_CPM',
      'Valores del equipo parametrizados para el cambio de plan masivo',
      'Activo',
      'mlcruz',
      CURRENT_TIMESTAMP,
      '127.0.0.1'
    );
  SELECT ID_PARAMETRO
  INTO Ln_IdValoresEquipo
  FROM DB_GENERAL.ADMI_PARAMETRO_CAB
  WHERE NOMBRE_PARAMETRO='VALORES_EQUIPOS_CPM';
  INSERT
  INTO DB_GENERAL.ADMI_PARAMETRO_DET
  ( 
    ID_PARAMETRO_DET,
    PARAMETRO_ID,
    DESCRIPCION,
    VALOR1,
    VALOR2,
    VALOR3,
    VALOR4,
    ESTADO,
    USR_CREACION,
    FE_CREACION,
    IP_CREACION,
    USR_ULT_MOD,
    FE_ULT_MOD,
    IP_ULT_MOD,
    VALOR5,
    EMPRESA_COD
  )
  VALUES
  (
    DB_GENERAL.SEQ_ADMI_PARAMETRO_DET.NEXTVAL,
    Ln_IdValoresEquipo,
    'Valores del equipo parametrizados para el cambio de plan masivo',
    'MASIVO',
    '1',
    NULL,
    NULL,
    'Activo',
    'mlcruz',
    sysdate,
    '127.0.0.1',
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
  );
  INSERT
  INTO DB_GENERAL.ADMI_PARAMETRO_DET
  ( 
    ID_PARAMETRO_DET,
    PARAMETRO_ID,
    DESCRIPCION,
    VALOR1,
    VALOR2,
    VALOR3,
    VALOR4,
    ESTADO,
    USR_CREACION,
    FE_CREACION,
    IP_CREACION,
    USR_ULT_MOD,
    FE_ULT_MOD,
    IP_ULT_MOD,
    VALOR5,
    EMPRESA_COD
  )
  VALUES
  (
    DB_GENERAL.SEQ_ADMI_PARAMETRO_DET.NEXTVAL,
    Ln_IdValoresEquipo,
    'Valores del equipo parametrizados para el cambio de plan masivo',
    'MASIVO',
    '2',
    NULL,
    NULL,
    'Activo',
    'mlcruz',
    sysdate,
    '127.0.0.1',
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
  );
  INSERT
  INTO DB_GENERAL.ADMI_PARAMETRO_DET
  ( 
    ID_PARAMETRO_DET,
    PARAMETRO_ID,
    DESCRIPCION,
    VALOR1,
    VALOR2,
    VALOR3,
    VALOR4,
    ESTADO,
    USR_CREACION,
    FE_CREACION,
    IP_CREACION,
    USR_ULT_MOD,
    FE_ULT_MOD,
    IP_ULT_MOD,
    VALOR5,
    EMPRESA_COD
  )
  VALUES
  (
    DB_GENERAL.SEQ_ADMI_PARAMETRO_DET.NEXTVAL,
    Ln_IdValoresEquipo,
    'Valores del equipo parametrizados para el cambio de plan masivo',
    'MASIVO',
    '3',
    NULL,
    NULL,
    'Activo',
    'mlcruz',
    sysdate,
    '127.0.0.1',
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
  );
  INSERT
  INTO DB_GENERAL.ADMI_PARAMETRO_DET
  ( 
    ID_PARAMETRO_DET,
    PARAMETRO_ID,
    DESCRIPCION,
    VALOR1,
    VALOR2,
    VALOR3,
    VALOR4,
    ESTADO,
    USR_CREACION,
    FE_CREACION,
    IP_CREACION,
    USR_ULT_MOD,
    FE_ULT_MOD,
    IP_ULT_MOD,
    VALOR5,
    EMPRESA_COD
  )
  VALUES
  (
    DB_GENERAL.SEQ_ADMI_PARAMETRO_DET.NEXTVAL,
    Ln_IdValoresEquipo,
    'Valores del equipo parametrizados para el cambio de plan masivo',
    'MASIVO',
    '4',
    NULL,
    NULL,
    'Activo',
    'mlcruz',
    sysdate,
    '127.0.0.1',
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
  );
  SYS.DBMS_OUTPUT.PUT_LINE('Se han ingresado correctamente los valores del equipo permitidos para el cambio de plan masivo');
  COMMIT;
EXCEPTION
WHEN OTHERS THEN
  SYS.DBMS_OUTPUT.PUT_LINE('Error: '|| SQLCODE || ' - ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK 
                           || ' - ERROR_BACKTRACE: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);  
  ROLLBACK;
END;
/
INSERT
INTO DB_COMERCIAL.ADMI_CARACTERISTICA
  (
    ID_CARACTERISTICA,
    DESCRIPCION_CARACTERISTICA,
    TIPO_INGRESO,
    ESTADO,
    FE_CREACION,
    USR_CREACION,
    FE_ULT_MOD,
    USR_ULT_MOD,
    TIPO
  )
  VALUES
  (
    DB_COMERCIAL.SEQ_ADMI_CARACTERISTICA.NEXTVAL,
    'VALOR_EQUIPO_CPM',
    'T',
    'Activo',
    SYSDATE,
    'mlcruz',
    NULL,
    NULL,
    'COMERCIAL'
  );
/**
* Se eliminan las solicitudes que quedaron pendientes al realizar el cambio de plan masivo
* y que constaban más de una vez en un mismo archivo csv
*/
UPDATE DB_COMERCIAL.INFO_DETALLE_SOLICITUD
SET ESTADO                  = 'EliminadaErrorSubidaCPM',
  OBSERVACION               = 'Eliminada por registros duplicados en una misma subida de archivo csv'
WHERE ID_DETALLE_SOLICITUD IN
  ( SELECT DISTINCT SOL_CPM.ID_DETALLE_SOLICITUD
  FROM DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOL_CPM
  INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOL_CARACT SOL_CARACT_CPM
  ON SOL_CARACT_CPM.DETALLE_SOLICITUD_ID = SOL_CPM.ID_DETALLE_SOLICITUD
  INNER JOIN
    ( SELECT DISTINCT SOL_PADRE.ID_DETALLE_SOLICITUD AS ID_SOL_PADRE,
      SOLICITUD.SERVICIO_ID                          AS ID_SERVICIO_CPM
    FROM DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOLICITUD
    INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOL_CARACT SOL_CARACT
    ON SOL_CARACT.DETALLE_SOLICITUD_ID = SOLICITUD.ID_DETALLE_SOLICITUD
    INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOL_PADRE
    ON SOL_PADRE.ID_DETALLE_SOLICITUD = COALESCE(TO_NUMBER(REGEXP_SUBSTR(SOL_CARACT.VALOR ,'^\d+')),0)
    INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO ELEMENTO
    ON ELEMENTO.ID_ELEMENTO = SOLICITUD.ELEMENTO_ID
    INNER JOIN DB_COMERCIAL.ADMI_CARACTERISTICA CARACT
    ON SOL_CARACT.CARACTERISTICA_ID       = CARACT.ID_CARACTERISTICA
    WHERE SOLICITUD.TIPO_SOLICITUD_ID     = 116
    AND SOL_PADRE.TIPO_SOLICITUD_ID       = 117
    AND SOL_PADRE.ESTADO                  = 'Pendiente'
    AND (SOLICITUD.ESTADO                 = 'Pendiente'
    OR SOLICITUD.ESTADO                   = 'Finalizada' )
    AND CARACT.DESCRIPCION_CARACTERISTICA = 'REFERENCIA SOLICITUD'
    GROUP BY SOL_PADRE.ID_DETALLE_SOLICITUD,
      SOLICITUD.SERVICIO_ID
    HAVING COUNT(SOLICITUD.ID_DETALLE_SOLICITUD ) > 1
    AND EXISTS
      ( SELECT DISTINCT SOL_CPM_PENDIENTE.ID_DETALLE_SOLICITUD
      FROM DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOL_CPM_PENDIENTE
      INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOL_CARACT SOL_CARACT_PADRE
      ON SOL_CARACT_PADRE.DETALLE_SOLICITUD_ID                                   = SOL_CPM_PENDIENTE.ID_DETALLE_SOLICITUD
      WHERE COALESCE(TO_NUMBER(REGEXP_SUBSTR(SOL_CARACT_PADRE.VALOR ,'^\d+')),0) = SOL_PADRE.ID_DETALLE_SOLICITUD
      AND SOL_CPM_PENDIENTE.SERVICIO_ID                                          = SOLICITUD.SERVICIO_ID
      AND SOL_CPM_PENDIENTE.ESTADO                                               = 'Pendiente'
      )
    AND EXISTS
      ( SELECT DISTINCT SOL_CPM_FINALIZADA.ID_DETALLE_SOLICITUD
      FROM DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOL_CPM_FINALIZADA
      INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOL_CARACT SOL_CARACT_PADRE
      ON SOL_CARACT_PADRE.DETALLE_SOLICITUD_ID                                   = SOL_CPM_FINALIZADA.ID_DETALLE_SOLICITUD
      WHERE COALESCE(TO_NUMBER(REGEXP_SUBSTR(SOL_CARACT_PADRE.VALOR ,'^\d+')),0) = SOL_PADRE.ID_DETALLE_SOLICITUD
      AND SOL_CPM_FINALIZADA.SERVICIO_ID                                         = SOLICITUD.SERVICIO_ID
      AND SOL_CPM_FINALIZADA.ESTADO                                              = 'Finalizada'
      )
    ) SOL_X_ELIMINAR ON SOL_X_ELIMINAR.ID_SOL_PADRE = COALESCE(TO_NUMBER(REGEXP_SUBSTR(SOL_CARACT_CPM.VALOR ,'^\d+')),0)
  AND SOL_CPM.SERVICIO_ID                           = SOL_X_ELIMINAR.ID_SERVICIO_CPM
  WHERE SOL_CPM.ESTADO                              = 'Pendiente'
  ) ;
/**
* Se actualizan las solicitudes que se encuentran en Fallo para regularizar la data y poder dar de baja
* a los detalles de los procesos masivos de cambio de Plan Masivo en estado PrePendiente
*/
UPDATE DB_COMERCIAL.INFO_DETALLE_SOLICITUD
SET ESTADO                  = 'FinalizadaRegulaFalloCPM',
  OBSERVACION               = 'Se actualiza registro por regularización de procesos masivos de cambio de plan masivo en estado PrePendiente'
WHERE ID_DETALLE_SOLICITUD IN
  ( SELECT DISTINCT SOLICITUD.ID_DETALLE_SOLICITUD AS ID_SOL_CPM
  FROM DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOLICITUD
  INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOL_CARACT SOL_CARACT
  ON SOL_CARACT.DETALLE_SOLICITUD_ID = SOLICITUD.ID_DETALLE_SOLICITUD
  INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOL_PADRE
  ON SOL_PADRE.ID_DETALLE_SOLICITUD = COALESCE(TO_NUMBER(REGEXP_SUBSTR(SOL_CARACT.VALOR ,'^\d+')),0)
  INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO ELEMENTO
  ON ELEMENTO.ID_ELEMENTO = SOLICITUD.ELEMENTO_ID
  INNER JOIN DB_COMERCIAL.ADMI_CARACTERISTICA CARACT
  ON SOL_CARACT.CARACTERISTICA_ID       = CARACT.ID_CARACTERISTICA
  WHERE SOLICITUD.TIPO_SOLICITUD_ID     = 116
  AND SOL_PADRE.TIPO_SOLICITUD_ID       = 117
  AND SOLICITUD.ESTADO                  = 'Fallo'
  AND CARACT.DESCRIPCION_CARACTERISTICA = 'REFERENCIA SOLICITUD'
  );
/**
* Se actualizan las solicitudes que se encuentran en Pendiente para regularizar la data y poder dar de baja
* a los detalles de los procesos masivos de cambio de Plan Masivo en estado Pendiente
*/
UPDATE DB_COMERCIAL.INFO_DETALLE_SOLICITUD
SET ESTADO                  = 'FinalizadaRegulaPendienteCPM',
  OBSERVACION               = 'Se actualiza registro por regularización de procesos masivos de cambio de plan masivo en estado Pendiente'
WHERE ID_DETALLE_SOLICITUD IN
  ( SELECT DISTINCT SOLICITUD.ID_DETALLE_SOLICITUD AS ID_SOL_CPM
  FROM DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOLICITUD
  INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOL_CARACT SOL_CARACT
  ON SOL_CARACT.DETALLE_SOLICITUD_ID = SOLICITUD.ID_DETALLE_SOLICITUD
  INNER JOIN DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOL_PADRE
  ON SOL_PADRE.ID_DETALLE_SOLICITUD = COALESCE(TO_NUMBER(REGEXP_SUBSTR(SOL_CARACT.VALOR ,'^\d+')),0)
  INNER JOIN DB_INFRAESTRUCTURA.INFO_ELEMENTO ELEMENTO
  ON ELEMENTO.ID_ELEMENTO = SOLICITUD.ELEMENTO_ID
  INNER JOIN DB_COMERCIAL.ADMI_CARACTERISTICA CARACT
  ON SOL_CARACT.CARACTERISTICA_ID       = CARACT.ID_CARACTERISTICA
  WHERE SOLICITUD.TIPO_SOLICITUD_ID     = 116
  AND SOL_PADRE.TIPO_SOLICITUD_ID       = 117
  AND SOLICITUD.ESTADO                  = 'Pendiente'
  AND CARACT.DESCRIPCION_CARACTERISTICA = 'REFERENCIA SOLICITUD'
  );
/**
* Se actualizan las solicitudes padres que se encuentran en Pendiente para regularizar la data
*/
UPDATE DB_COMERCIAL.INFO_DETALLE_SOLICITUD
SET ESTADO                  = 'FinalizadaRegulaCPM',
  OBSERVACION               = 'Se actualiza registro por regularización de data del cambio de plan masivo'
WHERE ID_DETALLE_SOLICITUD IN
  (SELECT SOL.ID_DETALLE_SOLICITUD
  FROM DB_COMERCIAL.INFO_DETALLE_SOLICITUD SOL
  INNER JOIN DB_COMERCIAL.ADMI_TIPO_SOLICITUD TIPO_SOL
  ON TIPO_SOL.ID_TIPO_SOLICITUD        = SOL.TIPO_SOLICITUD_ID
  WHERE TIPO_SOL.DESCRIPCION_SOLICITUD = 'SOLICITUD MIGRACION NUEVOS PLANES'
  AND SOL.ESTADO                       = 'Pendiente'
  );
/**
* Se actualizan los detalles de los procesos masivos en estado PrePendiente
*/
UPDATE DB_INFRAESTRUCTURA.INFO_PROCESO_MASIVO_DET
SET ESTADO                   = 'PrePendienteCPM',
  OBSERVACION                = 'Se actualiza registro por regularización de cambio de plan masivo en estado PrePendiente'
WHERE ID_PROCESO_MASIVO_DET IN
  ( SELECT DISTINCT IPMD.ID_PROCESO_MASIVO_DET
  FROM DB_INFRAESTRUCTURA.INFO_PROCESO_MASIVO_DET IPMD
  INNER JOIN DB_INFRAESTRUCTURA.INFO_PROCESO_MASIVO_CAB IPMC
  ON IPMD.PROCESO_MASIVO_CAB_ID = IPMC.ID_PROCESO_MASIVO_CAB
  WHERE IPMD.ESTADO             = 'PrePendiente'
  AND IPMC.TIPO_PROCESO         = 'CambioPlanMasivo'
  AND IPMC.EMPRESA_ID           = 18
  );
/**
* Se actualizan los detalles de los procesos masivos en estado Pendiente
*/
UPDATE DB_INFRAESTRUCTURA.INFO_PROCESO_MASIVO_DET
SET ESTADO                   = 'PendienteCPM',
  OBSERVACION                = 'Se actualiza registro por regularización de cambio de plan masivo en estado Pendiente'
WHERE ID_PROCESO_MASIVO_DET IN
  ( SELECT DISTINCT IPMD.ID_PROCESO_MASIVO_DET
  FROM DB_INFRAESTRUCTURA.INFO_PROCESO_MASIVO_DET IPMD
  INNER JOIN DB_INFRAESTRUCTURA.INFO_PROCESO_MASIVO_CAB IPMC
  ON IPMD.PROCESO_MASIVO_CAB_ID = IPMC.ID_PROCESO_MASIVO_CAB
  WHERE IPMD.ESTADO             = 'Pendiente'
  AND IPMC.TIPO_PROCESO         = 'CambioPlanMasivo'
  AND IPMC.EMPRESA_ID           = 18
  );
/**
* Se actualizan los procesos masivos en estado Pendiente
*/
UPDATE DB_INFRAESTRUCTURA.INFO_PROCESO_MASIVO_CAB
SET ESTADO         = 'FinalizadaCPM'
WHERE TIPO_PROCESO = 'CambioPlanMasivo'
AND ESTADO         = 'Pendiente'
AND EMPRESA_ID     = 18;
/**
* Se actualizan a FIN los detalles de los OLTS
*/
UPDATE DB_INFRAESTRUCTURA.INFO_DETALLE_ELEMENTO
SET DETALLE_VALOR          ='FIN'
WHERE ID_DETALLE_ELEMENTO IN
  (SELECT IDE_MIDDLEWARE.ID_DETALLE_ELEMENTO
  FROM DB_INFRAESTRUCTURA.info_elemento OLT,
    DB_INFRAESTRUCTURA.INFO_EMPRESA_ELEMENTO_UBICA ELEUBI,
    DB_INFRAESTRUCTURA.INFO_DETALLE_ELEMENTO IDE_MIDDLEWARE,
    DB_INFRAESTRUCTURA.admi_modelo_elemento modelo,
    DB_INFRAESTRUCTURA.admi_tipo_elemento TIPO
  WHERE OLT.ID_ELEMENTO             = ELEUBI.ELEMENTO_ID
  AND OLT.MODELO_ELEMENTO_ID        = modelo.ID_MODELO_ELEMENTO
  AND modelo.TIPO_ELEMENTO_ID       = TIPO.ID_TIPO_ELEMENTO
  AND TIPO.NOMBRE_TIPO_ELEMENTO     = 'OLT'
  AND ELEUBI.EMPRESA_COD            = '18'
  AND OLT.ID_ELEMENTO               = IDE_MIDDLEWARE.ELEMENTO_ID
  AND IDE_MIDDLEWARE.DETALLE_NOMBRE = 'CAMBIO_PLAN_MASIVO_MD'
  AND IDE_MIDDLEWARE.DETALLE_VALOR != 'FIN'
  AND IDE_MIDDLEWARE.ESTADO         = 'Activo'
  AND (OLT.ESTADO                   = 'Activo'
  OR OLT.ESTADO                     = 'Modificado')
  );
COMMIT;
/
